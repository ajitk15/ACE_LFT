
CREATE COMPUTE MODULE propagate_out
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		SET OutputRoot.Properties.MessageType = '{}:P_EMPLOYEE';
		CREATE LASTCHILD OF OutputRoot DOMAIN ('DFDL');
		DECLARE I INTEGER 1;
		FOR atRecord AS InputRoot.DFDL.C_EMPLOYEE.record[] DO
			SET Environment.rec = atRecord;
			SET OutputRoot.DFDL.P_EMPLOYEE.record[I] = atRecord;
			SET Environment.rec2 = atRecord;

			IF (MOD(I, 10)=0) THEN
				SET Environment.I = I;
				PROPAGATE TO TERMINAL 'out' MESSAGE OutputRoot;
				CALL CopyMessageHeaders();
				SET OutputRoot.Properties.MessageType = '{}:P_EMPLOYEE';
				CREATE LASTCHILD OF OutputRoot DOMAIN ('DFDL');
				SET I = 1;
			ELSE
				SET I = I + 1;
			END IF;
		END FOR;
		-- To avoid any zero recoreds
		IF EXISTS(OutputRoot.DFDL.P_EMPLOYEE.record[]) THEN
			PROPAGATE TO TERMINAL 'out' MESSAGE OutputRoot;
		END IF;
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

END MODULE;